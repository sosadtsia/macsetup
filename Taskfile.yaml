---
version: '3'

output: interleaved

silent: True

includes:
  hostSpecific:
    aliases: [include]
    taskfile: ./Taskfile.{{OS}}.yaml
    internal: True

vars:
  AWS_PROFILE: default
  AWS_REGION: us-east-1

tasks:
  default:
    aliases: [usage]
    cmds:
      - printf "OS - {{OS}}\n"
      - task --list-all

  brew-install:
    desc: "Install brew packages"
    cmds:
      - echo "Installing brew packages..."
      - if ! xcode-select -p > /dev/null; then xcode-select --install; fi
      - brew bundle
    env:
      HOMEBREW_NO_ENV_HINTS: false
    status:
      - test -f Brewfile.lock.json

  brew-uninstall:
    desc: "Uninstall brew packages"
    cmds:
      - echo "Uninstalling brew packages..."
      - brew bundle cleanup --force
    env:
      HOMEBREW_NO_ENV_HINTS: false
    status:
      - test -f Brewfile.lock.json

  asdf-add-plugins:
    desc: "Add asdf plugins"
    cmds:
      - asdf plugin add aws-nuke
      - asdf plugin add aws-ssm-tools https://github.com/amrox/asdf-pyapp.git
      - asdf plugin add awscli
      - asdf plugin add eksctl
      - asdf plugin add jq
      - asdf plugin add k9s
      - asdf plugin add kind
      - asdf plugin add kubectl
      - asdf plugin add kube-linter
      - asdf plugin add kubebuilder
      - asdf plugin add kustomize
      - asdf plugin add kuttl
      - asdf plugin add operator-sdk
      - asdf plugin add opentofu
      - asdf plugin add python
      - asdf plugin add terraform
      - asdf plugin add terraform-docs
      - asdf plugin add terraform-ls
      - asdf plugin add tflint
      - asdf plugin add tfsec
      - asdf plugin add yarn
      - asdf plugin add yq
      - asdf plugin add helm
    preconditions:
      - sh: which asdf

  asdf-remove-plugins:
    desc: "Remove asdf plugins"
    cmds:
      - asdf plugin remove aws-nuke
      - asdf plugin remove aws-ssm-tools
      - asdf plugin remove awscli
      - asdf plugin remove eksctl
      - asdf plugin remove jq
      - asdf plugin remove k9s
      - asdf plugin remove kind
      - asdf plugin remove kubectl
      - asdf plugin remove kube-linter
      - asdf plugin remove kubebuilder
      - asdf plugin remove kustomize
      - asdf plugin remove kuttl
      - asdf plugin remove operator-sdk
      - asdf plugin remove opentofu
      - asdf plugin remove python
      - asdf plugin remove terraform
      - asdf plugin remove terraform-docs
      - asdf plugin remove terraform-ls
      - asdf plugin remove tflint
      - asdf plugin remove tfsec
      - asdf plugin remove yarn
      - asdf plugin remove yq
      - asdf plugin remove helm
    preconditions:
      - sh: which asdf

  asdf-install:
    desc: "Install tools with asdf"
    cmds:
      - echo "Installing tools with asdf..."
      - asdf install

  pip-install:
    desc: "Install Python packages"
    cmds:
      - echo "Installing Python packages..."
      - pip install -r requirements.txt

  pip-uninstall:
    desc: "Uninstall Python packages"
    cmds:
      - echo "Uninstalling Python packages..."
      - pip freeze | xargs pip uninstall -y

  install-vscode-extensions:
    desc: "Install specified VS Code extensions"
    cmds:
      - |
        extensions=(
          "artymaury.template-finder"
          "davidanson.vscode-markdownlint"
          "eamodio.gitlens"
          "formulahendry.auto-rename-tag"
          "github.copilot"
          "github.copilot-chat"
          "github.github-vscode-theme"
          "github.vscode-github-actions"
          "golang.go"
          "hashicorp.terraform"
          "iliazeus.vscode-ansi"
          "keesschollaart.vscode-home-assistant"
          "me-dutour-mathieu.vscode-github-actions"
          "mechatroner.rainbow-csv"
          "mhutchie.git-graph"
          "moshfeu.compare-folders"
          "ms-azuretools.vscode-docker"
          "ms-kubernetes-tools.vscode-kubernetes-tools"
          "ms-python.debugpy"
          "ms-python.isort"
          "ms-python.python"
          "ms-vscode-remote.remote-containers"
          "ms-vscode.makefile-tools"
          "oderwat.indent-rainbow"
          "redhat.vscode-yaml"
          "ryu1kn.partial-diff"
          "samuelcolvin.jinjahtml"
          "task.vscode-task"
          "visualstudioexptteam.intellicode-api-usage-examples"
          "visualstudioexptteam.vscodeintellicode"
          "vscode-icons-team.vscode-icons"
          "wayou.vscode-todo-highlight"
        )
        for extension in "${extensions[@]}"; do
          if ! code --list-extensions | grep -q "$extension"; then
            echo "Installing $extension..."
            code --install-extension "$extension"
          else
            echo "$extension is already installed."
          fi
        done
    preconditions:
      - sh: which code

  uninstall-vscode:
    desc: "Run uninstall-vscode.sh script"
    cmds:
      - ./uninstall-vscode.sh
    preconditions:
      - sh: which code

  test:
    desc: test:deployment
    cmds:
      - task: test:deployment

  deployment:
    desc: "Install brew packages and tools with asdf"
    cmds:
      - task: brew-install
      - task: asdf-add-plugins
      - task: asdf-install
      - task: pip-install
      - task: install-vscode-extensions
      - task: test
    preconditions:
      - sh: which asdf

  destroy:
    desc: "Uninstall all tools and extensions"
    cmds:
      - task: pip-uninstall
      - task: uninstall-vscode
      - task: asdf-remove-plugins
      - task: brew-uninstall
    preconditions:
      - sh: which asdf
      - sh: which brew
      - sh: which code

  test:deployment:
    desc: test:deployment
    cmds:
      - echo "No deployment tests"
    # env:
    #   KUBECONFIG: '{{.ROOT_DIR}}/kubeconfig'

  clean:
    cmds:
      # - cmd: rm -f kubeconfig
      - rm -f Brewfile.lock.json
